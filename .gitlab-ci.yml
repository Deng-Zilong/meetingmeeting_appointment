variables:
  # 目录结构展示
  # --live-venue-reservation-b
  #   --live-venue-reservation-java
  #     --Dockerfile
  #     --jfmcn-admin
  #         --src
  #         --target
  #             --xxx.jar
  #     --jfmcn-business
  #     --jfmcn-common
  #   --live-venue-reservation-js
  #     --src
  #   --.gitlab-ci.yml

  #【请修改】后端文件夹路径
  BACK_PATH: "./"

  #【请修改】前端文件夹路径
  FRONT_PATH: "meeting-appointment-ui"

  #【请修改】后端Dockerfile存在路径(参考上述目录结构)
  DOCKERFILE_PATH: "Dockerfile"

  #【请修改】1 项目名称 不能使用_用-代替,2【前端】项目用web或app结尾，前、后端 "PROJECT_NAME" 不一样； 3【后端】采用-backend结尾
  #正例：前端jf-training-web 后端jf-training-backend
  #反例：前端jf___training-web 后端jf___training
  #反例：前端jf-training 后端jf-training
  #反例：前端JF-TRAINING 后端JF-TRAINING  不能使用大写
  FRONT_PROJECT_NAME: "meeting-appointment-web"

  #【请修改】后端项目名称(要求同上)
  BACK_PROJECT_NAME: "meeting-appointment-backend"

  #【请修改】前端项目打包方式 npm run build:$ENVIRONMENT
  # ENVIRONMENT: test

  #【请修改】Jar包的端口号，建议各项目组设置后端服务用8080端口
  JAR_PORT: 8080

  #【请修改】后端Jar包存在地址(参考上述目录结构)
#  JAR_PATH = "./meeting-appointment-admin/target"
  JAR_PATH: "meeting-appointment-admin/target/*.jar"

  PROD_DOCKER_TAG: "${CI_COMMIT_TAG}"
  DOCKER_TAG: "${CI_COMMIT_SHORT_SHA}"
  PROJECT_TYPE: "backend"

stages:
  - build
  - deploy


# develop环境打包-后端
build_and_push_develop_back:
  tags:
    - jifu-dev
  image: registry.jifu.ytx.com/jifu_dev/base_image_jdk21_maven_node18:v3.0
  stage: build
  script:
    - cd ${BACK_PATH}
    - mvn clean install package
    - sed -i 's|<JAR_PATH>|'${JAR_PATH}'|g'  $DOCKERFILE_PATH
    - cat $DOCKERFILE_PATH
    - bash  /opt/deploy/scripts/build-image.sh develop ${BACK_PROJECT_NAME} ${DOCKER_TAG}
  only:
    refs:
      - branches
    changes:
      - server/**
  except:
    refs:
      - tags

# # develop环境部署-后端
deploy_to_develop_back:
  tags:
    - jifu-dev
  image: registry.jifu.ytx.com/library/kubectl:1.23.1
  stage: deploy
  script:
    - sh /opt/deploy/scripts/deploy.sh develop ${BACK_PROJECT_NAME} ${DOCKER_TAG} ${JAR_PORT}
  needs: ["build_and_push_develop_back"]
  when: on_success
  only:
    refs:
      - branches
    changes:
      - server/**
  except:
    refs:
      - tags

# develop环境打包-前端
build_and_push_develop_front:
  tags:
    - jifu-dev
  image: registry.jifu.ytx.com/jifu_dev/base_image_jdk21_maven_node18:v3.0
  stage: build
  script:
    - export PROJECT_TYPE="frontend"
    - cd ${FRONT_PATH}
    - npm config set registry https://registry.npmmirror.com
    - npm install --no-frozen-lockfile
    - npm run build:${ENVIRONMENT}
    - bash /opt/deploy/scripts/build-image.sh develop ${FRONT_PROJECT_NAME} ${DOCKER_TAG}
  only:
    refs:
      - branches
    changes:
      - server/**
  except:
    refs:
      - tags

# develop环境部署-前端
deploy_to_develop_front:
  tags:
    - jifu-dev
  image: registry.jifu.ytx.com/library/kubectl:1.23.1
  stage: deploy
  script:
    - export PROJECT_TYPE="frontend"
    - sh /opt/deploy/scripts/deploy.sh develop ${FRONT_PROJECT_NAME} ${DOCKER_TAG} 80
  needs: ["build_and_push_develop_front"]
  when: on_success
  only:
    refs:
      - branches
    changes:
      - server/**
  except:
    refs:
      - tags